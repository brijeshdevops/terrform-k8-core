#### Configure oauth2_proxy values in the file oauth2-proxy.yaml with the values:
# OAUTH2_PROXY_CLIENT_ID with the github <Client ID>
# OAUTH2_PROXY_CLIENT_SECRET with the github <Client Secret>
# OAUTH2_PROXY_COOKIE_SECRET with value of python -c 'import os,base64; print(base64.b64encode(os.urandom(16)).decode("ascii"))'

# URL To register using GitHub : https://github.com/settings/applications/


apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      serviceAccountName: kubernetes-dashboard
      containers:
      - args:
        - --provider=github
        - --email-domain=*
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        # Register a new application
        # https://github.com/settings/applications/new
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: 'e160e34e580283599355'
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: '988a3659cfffdcfb881e70c23b9cb23bd1d94067'
        # docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: 'MFNnWXp2dlBiMkMvdWR2WkRuaWR1QT09'
        image: quay.io/oauth2-proxy/oauth2-proxy:latest
        imagePullPolicy: Always
        name: oauth2-proxy
        ports:
        - containerPort: 4180
          protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: kubernetes-dashboard
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: oauth2-proxy


---
######  Ingress Setting   ######

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "https://k8dashboard.dcdevtesting.com/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://k8dashboard.dcdevtesting.com/oauth2/start?rd=$escaped_request_uri"
    #kubernetes.io/ingress.class: "nginx"
  name: external-auth-oauth2
  namespace: kubernetes-dashboard
spec:
  rules:
  - host: k8dashboard.dcdevtesting.com
    http:
      paths:
      - backend:
          serviceName: kubernetes-dashboard
          servicePort: 80
        path: /

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: oauth2-proxy
  namespace: kubernetes-dashboard
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: k8dashboard.dcdevtesting.com
    http:
      paths:
      - backend:
          serviceName: oauth2-proxy
          servicePort: 4180
        path: /oauth2
  tls:
  - hosts:
    - k8dashboard.dcdevtesting.com
    secretName: tls-secret